name: Deploy to Salesforce (JWT)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: deploy-sandbox
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: sandbox
    timeout-minutes: 60
    env:
      SF_API_VERSION: ${{ vars.SF_API_VERSION || '61.0' }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      # Tools we rely on in later steps
      - name: Install prerequisites (jq)
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Install Salesforce CLI
        run: npm i -g @salesforce/cli@${{ vars.SF_CLI_VERSION || 'latest' }} && sf --version

      # Auth + key hygiene + API version pin
      - name: Authenticate to Salesforce (JWT)
        run: |
          set -euo pipefail
          trap 'shred -u server.key || rm -f server.key' EXIT
          echo "${{ secrets.SF_JWT_KEY }}" > server.key
          chmod 600 server.key

          sf org login jwt \
            --username "${{ secrets.SF_USERNAME }}" \
            --client-id "${{ secrets.SF_CONSUMER_KEY }}" \
            --jwt-key-file server.key \
            --instance-url "${{ vars.SF_INSTANCE_URL }}" \
            --alias target --set-default

          sf config set org-api-version="$SF_API_VERSION"

      - name: Permission probe (Organization query)
        run: |
          sf data query \
            --target-org target \
            --query "SELECT Id, Name, InstanceName, OrganizationType FROM Organization" \
            --json | tee orgquery.json

      # --------- sanity checks / better error output ----------
      - name: Preview what would deploy (helps catch path/package issues)
        run: |
          sf project deploy preview \
            --target-org target \
            --source-dir force-app \
            --json | tee preview.json

      # --------- VALIDATE for SANDBOX (tests against PR code, no Job Id needed) ----------
      - name: Validate in sandbox (dry-run with tests)
        run: |
          sf project deploy start \
            --target-org target \
            --source-dir force-app \
            --dry-run \
            --test-level RunLocalTests \
            --wait 90 \
            --json | tee validate.json

      # --------- DEPLOY TO SANDBOX (normal deploy) ----------
      # Since tests already ran in the dry-run above, NoTestRun is typical for sandboxes.
      - name: Deploy to sandbox (normal deploy)
        run: |
          sf project deploy start \
            --target-org target \
            --source-dir force-app \
            --test-level NoTestRun \
            --wait 60 \
            --json | tee deploy.json

      # --------- Always capture CLI logs & artifacts for troubleshooting ----------
      - name: Show last 2000 lines of sf CLI log
        if: always()
        run: |
          LOGFILE=$(ls -1t ~/.sf/sf-*.log 2>/dev/null | head -n 1 || true)
          if [ -n "$LOGFILE" ]; then
            echo "== Tailing $LOGFILE =="
            tail -n 2000 "$LOGFILE" || true
          else
            echo "No ~/.sf logs found"
          fi

      - name: Upload debug artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sf-debug-artifacts
          path: |
            orgquery.json
            preview.json
            validate.json
            deploy.json
            ~/.sf/sf-*.log